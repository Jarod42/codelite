name: ccccc

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:

    # ccccc build
    - uses: Jarod42/install-premake5@v3

    - name: aptget llvm
      id: LLVM
      run: |
          sudo apt-get install clang-14 libclang-14-dev llvm-14-dev llvm-14-runtime llvm-14
          echo "LLVM_ROOT=/usr/lib/llvm-14" >> $GITHUB_OUTPUT

    - name: checkout ccccc
      uses: actions/checkout@v4
      with:
        submodules: recursive
        repository: Jarod42/ccccc
        path: ccccc

    - name: premake gmake2
      run: |
          cd ccccc
          premake5 --llvm-root="${{steps.LLVM.outputs.LLVM_ROOT}}" gmake2

    - name: make config=release
      run: |
          cd ccccc/project/gmake2
          make config=release verbose=1

    # WxWidgets
    - name: install dependencies for wxWidgets
      run: sudo apt-get install build-essential cmake git libedit-dev libgtk-3-dev libhunspell-dev libsqlite3-dev libssh-dev pkg-config xterm

    - name: Checkout WxWidgets
      uses: actions/checkout@v4
      with:
        repository: wxWidgets/wxWidgets
        ref: v3.2.5
        submodules: recursive
        path: codelite/wxWidgets

    - name: build and install wxWidgets
      run: |
        mkdir -p codelite/wxWidgets/build-release
        cd codelite/wxWidgets/build-release
        ../configure --disable-debug_flag --with-gtk=3 --enable-stl
        make -j$(nproc) && sudo make install

    # Codelite
    - name: install Codelite's dependencies
      run: sudo apt-get install build-essential cmake git libpcre2-dev libsqlite3-dev libssh-dev bison flex

    - name: Checkout Codelite
      uses: actions/checkout@v4
      with:
        submodules: recursive
        path: codelite

    - name: build, test and install Codelite
      run: |
        mkdir codelite/build-release
        cd codelite/build-release
        cmake -DCMAKE_BUILD_TYPE=Release .. -DCOPY_WX_LIBS=1 -DBUILD_TESTING=1
        make -j$(nproc)
        sudo make install
        ctest --output-on-failure

    - name: codelite --version
      run: xvfb-run -a codelite --version || exit 0 # codelite --version returns -1

    # ccccc runs
    - name: run ccccc on Codelite
      run: |
        ccccc/bin/gmake2/Release/ccccc --exclude-directory=codelite/build-release --exclude-directory=codelite/submodules --exclude-directory=codelite/sdk --template-file=ccccc/template/html/template.tpl codelite/build-release/compile_commands.json > index.html

    - name: Upload index.html
      uses: actions/upload-artifact@v4
      with:
        name: codelite_cccc.html
        path: |
          index.html
          ccccc/template/html/ccccc.js
          ccccc/template/html/ccccc.css
