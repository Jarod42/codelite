//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: UI.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _CODELITE_CHATAI_UI_BASE_CLASSES_HPP
#define _CODELITE_CHATAI_UI_BASE_CLASSES_HPP

// clang-format off
#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/panel.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/splitter.h>
#include <wx/stc/stc.h>
#include "clThemedSTC.hpp"
#include <wx/pen.h>
#include <wx/aui/auibar.h>
#include <map>
#include <wx/menu.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

// clang-format on

class AssistanceAIChatWindowBase : public wxPanel
{
protected:
    wxSplitterWindow* m_mainSplitter;
    wxPanel* m_splitterPageTop;
    clThemedSTC* m_stcOutput;
    wxPanel* m_splitterPageBottom;
    wxAuiToolBar* m_toolbar;
    clThemedSTC* m_stcInput;

protected:
    virtual void OnInputUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    clThemedSTC* GetStcOutput() { return m_stcOutput; }
    wxPanel* GetSplitterPageTop() { return m_splitterPageTop; }
    wxAuiToolBar* GetToolbar() { return m_toolbar; }
    clThemedSTC* GetStcInput() { return m_stcInput; }
    wxPanel* GetSplitterPageBottom() { return m_splitterPageBottom; }
    wxSplitterWindow* GetMainSplitter() { return m_mainSplitter; }
    AssistanceAIChatWindowBase(wxWindow* parent,
                               wxWindowID id = wxID_ANY,
                               const wxPoint& pos = wxDefaultPosition,
                               const wxSize& size = wxSize(-1, -1),
                               long style = wxTAB_TRAVERSAL);
    virtual ~AssistanceAIChatWindowBase();
};

#endif
